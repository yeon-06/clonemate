plugins {
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    // querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.1ndex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    implementation 'junit:junit:4.13.1'
    testImplementation "org.mockito:mockito-core:3.9.0"

    // string 처리 관련 library
    implementation 'org.apache.commons:commons-lang3'

    annotationProcessor(
            'org.projectlombok:lombok',
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            //"com.querydsl:querydsl-apt:jpa" <-- 를 넣으면 duplicate class error 뜸.
    )

    // *** DB ***

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //postgresql
    runtimeOnly 'org.postgresql:postgresql'

    // querydsl
    implementation "com.querydsl:querydsl-jpa"
    //implementation "com.querydsl:querydsl-apt" <-- 를 넣으면 duplicate class error 뜸.

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
}

// querydsl -----
//Q타입 생성 : Gradle → Tasks → build → clean, Gradle → Tasks → other → compileQuerydsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl ——

test {
    useJUnitPlatform()
}